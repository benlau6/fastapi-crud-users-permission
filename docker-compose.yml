version: '3.8'
services:
  api:
    build: ./backend
    # for direct entry: 127.0.0.1:3000
    command:
      - /start-reload.sh # for dev
    ports:
      - 3000:3000
    volumes:
      - ./backend:/app # for dev
      - ./data/files:/data/files # for dev
      - ./data/db:/data/db # for dev
    environment: 
      # check for env: https://github.com/tiangolo/uvicorn-gunicorn-fastapi-docker
      - PORT=3000
      - LOG_LEVEL=debug
    labels:
      # Enable Traefik for this specific "backend" service
      - traefik.enable=true
      # Define the port inside of the Docker service to use (shd be same as env:PORT)
      - traefik.http.services.api.loadbalancer.server.port=3000
      # Make Traefik use this domain in HTTP
      - traefik.http.routers.api.entrypoints=http
      - traefik.http.routers.api.rule=Host(`127.0.0.1`) && PathPrefix(`/api`)
      - traefik.http.middlewares.stripprefix.stripprefix.prefixes=/api
      # Sets the maximum request body to 200MB
      - traefik.http.middlewares.sizelimit.buffering.maxRequestBodyBytes=200000000
      # Apply middlewares
      - traefik.http.routers.api.middlewares=stripprefix@docker,sizelimit@docker
    #networks:
    #  - backend
  reverse-proxy:
    image: traefik
    ports:
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - 80:80
      - 8080:8080
    #networks:
    #  - backend
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Create an entrypoint "http" listening on port 80
      - --entrypoints.http.address=:80
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      #- --api
      - --api.insecure=true
  # Don't use it if you are not gonna complete it. Only 10% are done and did not consider security.
#  frontend:
#    build: ./frontend
#    # for direct entry: 127.0.0.1:3000
#    ports:
#      - 9528:9528
#    volumes:
#      - ./frontend:/app # for dev
#    labels:
#      # Enable Traefik for this specific "backend" service
#      - traefik.enable=true
#      # Define the port inside of the Docker service to use (shd be same as env:PORT)
#      - traefik.http.services.frontend.loadbalancer.server.port=9528
#      # Make Traefik use this domain in HTTP
#      - traefik.http.routers.frontend.entrypoints=http
#      - traefik.http.routers.frontend.rule=Host(`127.0.0.1`)
#    #networks:
#    #  - backend